{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";6IAQA,QANqB,CACnBA,KAAM,GAAF,OAAKC,EAAAA,EAAAA,SAAe,QACxBC,OAAQ,SAACC,GAAE,gBAAQF,EAAAA,EAAAA,SAAe,kBAAUE,EAAE,EAC9CC,KAAM,GAAF,OAAKH,EAAAA,EAAAA,SAAe,8PCJ1B,4wNAcA,QAbY,yBADZ,4FACY,SADZ,QAMG,EALS,EAUT,OAXH,EACY,OADZ,EACY,+CACV,sGACyBI,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BP,GAAE,uFACPE,MAAMC,EAAAA,OAAoBH,IAAI,OAAvC,OAARI,EAAW,EAAH,uBACPA,EAASC,QAAM,2CACvB,+CAXH,6DAWG,EAVS,4SCDZ,8hGAAAG,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDX,EAAAA,EAAAA,cAAxCY,EAAwCZ,EAAAA,EAAAA,iBAAtBa,EAAsBb,EAAAA,EAAAA,kBAEzDc,GAAYC,EAAAA,EAAAA,IAAOJ,EAAeC,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAkBF,QAfyB,CACjBC,SAAQ,SAAClB,GAAI,iHACHY,EAAS,uCAAEO,IAAIR,EAAmBX,IAAE,0CADjC,EAEnB,EACMoB,aAAY,WAAG,iHACLR,EAAS,uCAAES,OAAOV,IAAiB,0CAD9B,EAErB,EACMW,SAAQ,SAACC,GAAO,iHACNX,EAAS,uCAAEY,IAAIb,EAAmBY,IAAK,0CADjC,EAEtB,EACME,YAAW,SAACzB,GAAI,iHACNY,EAAS,8CAASD,EAAmBX,IAAE,0CADjC,EAEtB,mCCbF,QAVe,CACb0B,SAAU,uCACVC,eAAgB,oDAChBC,kBAAmB,QACnBC,YAAY,IAAIC,MAAOC,cACvBtB,cAAe,iBACfC,iBAAkB,EAClBC,kBAAmB","sources":["webpack://restaurant-apps/./src/scripts/global/end-point.js","webpack://restaurant-apps/./src/scripts/data/data-source.js","webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/global/config.js"],"sourcesContent":["import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n  POST: `${CONFIG.BASE_URL}review`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../global/end-point';\r\n\r\nclass DataDb {\r\n  static async getListRestaurant() {\r\n    const response = await fetch(API_ENDPOINT.LIST);\r\n    const responseJSON = await response.json();\r\n    return responseJSON.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport default DataDb;\r\n","import { openDB } from 'idb';\r\nimport CONFIG from '../global/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestoIdb = {\r\n  async getResto(id) {\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestos() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putResto(Resto) {\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, Resto);\r\n  },\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestoIdb;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  DEFAULT_LANGUANGE: 'en-us',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'resto-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'resto',\r\n};\r\n\r\nexport default CONFIG;\r\n"],"names":["LIST","CONFIG","DETAIL","id","POST","fetch","API_ENDPOINT","response","json","responseJSON","restaurants","i","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","get","getAllRestos","getAll","putResto","Resto","put","deleteResto","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUANGE","CACHE_NAME","Date","toISOString"],"sourceRoot":""}